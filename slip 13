Q1) Write a Java program to display information about the database and list all the tables in the database. (Use DatabaseMetaData).
import java.sql.*;

public class DBMetaData {
    public static void main(String[] args) throws Exception {
        ResultSet rs = null;
        Class.forName("org.postgresql.Driver");
        Connection conn = DriverManager.getConnection("jdbc:postgresql://localhost/dbtry", "postgr es", "redhat");
        DatabaseMetaData dbmd = conn.getMetaData();

        System.out.println("Database Product name = " + dbmd.getDatabaseProductName());
        System.out.println("User name = " + dbmd.getUserName());
        System.out.println("Database driver name= " + dbmd.getDriverName());
        System.out.println("Database driver version = " + dbmd.getDriverVersion());
        System.out.println("Database product name = " + dbmd.getDatabaseProductName());
        System.out.println("Database Version = " + dbmd.getDriverMajorVersion());

        rs = dbmd.getTables(null, null, null, new String[] { "TABLE" });
        System.out.println("List of tables...");
        while (rs.next()) {
            String tblName = rs.getString("TABLE_NAME");
            System.out.println("Table : " + tblName);
        }

        conn.close();
    }
}

Q2) Write a Java program to show lifecycle (creation, sleep, and dead) of a thread. Program should print randomly the name of thread and value of sleep time.
The name of the thread should be hard coded through constructor. The sleep time of a thread will be a random integer in the range 0 to 4999.
class MyThread extends Thread {
    public MyThread(String s) {
        super(s);
    }

    public void run() {
        System.out.println(getName() + " thread created.");
        while (true) {
            System.out.println(this);
            int s = (int) (Math.random() * 5000);
            System.out.println(getName() + " is sleeping for: " + s + " msec");
            try {
                Thread.sleep(s);
            } catch (Exception e) {
                // Handle exception
            }
        }
    }
}

class ThreadLifeCycle {
    public static void main(String[] args) {
        MyThread t1 = new MyThread("shradha");
        MyThread t2 = new MyThread("pooja");
        t1.start();
        t2.start();
        try {
            t1.join();
            t2.join();
        } catch (Exception e) {
            // Handle exception
        }
        System.out.println(t1.getName() + " thread dead.");
        System.out.println(t2.getName() + " thread dead.");
    }
}
